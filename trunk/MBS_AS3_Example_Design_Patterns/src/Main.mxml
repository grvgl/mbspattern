<?xml version="1.0" encoding="utf-8"?>
	<!--- 
		Main.mxml is the entry point of the MBS_AS3_Example_Design_Patterns project.
	-->
<mx:Application xmlns:mx="http://www.adobe.com/2006/mxml" 
	xmlns:body = "com.shivolve.application.body.components.*"
	layout="vertical" horizontalAlign="left"
	creationComplete="init(event)"
	pageTitle="MBS AS3 Example Design Patterns"
	width="800" height="600"
	>

	<mx:Script>
		<![CDATA[
			import mx.events.FlexEvent;
			import com.shivolve.mbs.as3.mind.observer.Notification;
			import com.shivolve.mbs.as3.action.interfaces.body.IMBSBody;
			import com.shivolve.mbs.as3.action.interfaces.mind.IMBSMind;
			import com.shivolve.mbs.as3.action.interfaces.soul.IMBSSoul;
			
			import com.shivolve.mbs.as3.action.mind.observer.MBSNotification;
			
			import com.shivolve.application.mindbodysoul.ApplicationBody;
			import com.shivolve.application.mindbodysoul.ApplicationMind;
			import com.shivolve.application.mindbodysoul.ApplicationSoul;
			import com.shivolve.application.mind.StartupCommand;
			import mx.controls.Alert;
			
			/**
			 * Steps to the MVC implementation:
			 * 1. Initialize the Model (Soul).
			 * 2. Pass a reference of Soul to the Mind. 
			 * 3. Pass the reference of Mind and Soul to Body.
			 * 
			 * Philosophy: 
			 * Steps to implement the MVC implementation of MBS:
			 * 1. In the beginning there was only Soul.
			 * 2. Mind was born when Soul started expanding. 
			 * 3. Body was formed by Mind with inspiration from Soul. 
			 */
			private var soul:IMBSSoul;
			private var mind:IMBSMind;
			private var body:IMBSBody;
			private var STARTUP:String = "Startup";
			
			private function init(event:FlexEvent):void
			{
				trace("Main#init():event=", event);
				this.soul = new ApplicationSoul();
				this.mind = new ApplicationMind(this.soul);
				this.body = new ApplicationBody(this.soul, this.mind, this);
				trace("Main#init():this.getBody()="+this.getBody());
				var startupNotification:MBSNotification = new MBSNotification(STARTUP, this, "");
				this.mind.addCommand(startupNotification.getName(), StartupCommand);
				this.body.notifyObservers(startupNotification);
				this.mind.executeCommand(startupNotification);
			}
			
			public function getBody():IMBSBody
			{
				return this.body;
			}
		]]>
	</mx:Script>
	
	<mx:VDividedBox id="examplesDividedBox" >
		
		<body:ExamplesPanel id="examplesPanel"  width="750" height="150" backgroundColor="#ffffcc" paddingLeft="5" paddingTop="5">
		</body:ExamplesPanel>

		<mx:Canvas id="exampleCanvas" width="750" height="350" backgroundColor="#cceeFF">
		</mx:Canvas>
		
	</mx:VDividedBox>

</mx:Application>